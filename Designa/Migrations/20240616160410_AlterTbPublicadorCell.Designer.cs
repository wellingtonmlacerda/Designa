// <auto-generated />
using System;
using Designa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Designa.Migrations
{
    [DbContext(typeof(DesignaContext))]
    [Migration("20240616160410_AlterTbPublicadorCell")]
    partial class AlterTbPublicadorCell
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Designa.Models.ListaNegra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PublicadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PublicadorListaNegraId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PublicadorId");

                    b.HasIndex("PublicadorListaNegraId");

                    b.ToTable("ListasNegra");
                });

            modelBuilder.Entity("Designa.Models.Parte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Minutos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PublicadorParteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReuniaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReuniaoId");

                    b.ToTable("Partes");
                });

            modelBuilder.Entity("Designa.Models.Publicador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("EMenorIdade")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(8000)");

                    b.Property<int?>("PaiId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isCelularValido")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaeId");

                    b.HasIndex("PaiId");

                    b.ToTable("Publicadores");
                });

            modelBuilder.Entity("Designa.Models.PublicadorParte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PublicadorAjudanteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PublicadorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParteId")
                        .IsUnique();

                    b.HasIndex("PublicadorAjudanteId");

                    b.HasIndex("PublicadorId");

                    b.ToTable("PublicadorPartes");
                });

            modelBuilder.Entity("Designa.Models.PublicadorPrivilegio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Privilegio")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PublicadorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PublicadorId");

                    b.ToTable("PublicadorPrivilegios");
                });

            modelBuilder.Entity("Designa.Models.Reuniao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Issue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PresidenteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PublicadorOracaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Semana")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PresidenteId");

                    b.HasIndex("PublicadorOracaoId");

                    b.ToTable("Reunioes");
                });

            modelBuilder.Entity("Designa.Models.ListaNegra", b =>
                {
                    b.HasOne("Designa.Models.Publicador", "Publicador")
                        .WithMany("listaNegraPublicadores")
                        .HasForeignKey("PublicadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Designa.Models.Publicador", "PublicadorListaNegra")
                        .WithMany()
                        .HasForeignKey("PublicadorListaNegraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicador");

                    b.Navigation("PublicadorListaNegra");
                });

            modelBuilder.Entity("Designa.Models.Parte", b =>
                {
                    b.HasOne("Designa.Models.Reuniao", "Reuniao")
                        .WithMany("Partes")
                        .HasForeignKey("ReuniaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reuniao");
                });

            modelBuilder.Entity("Designa.Models.Publicador", b =>
                {
                    b.HasOne("Designa.Models.Publicador", "Mae")
                        .WithMany()
                        .HasForeignKey("MaeId");

                    b.HasOne("Designa.Models.Publicador", "Pai")
                        .WithMany()
                        .HasForeignKey("PaiId");

                    b.Navigation("Mae");

                    b.Navigation("Pai");
                });

            modelBuilder.Entity("Designa.Models.PublicadorParte", b =>
                {
                    b.HasOne("Designa.Models.Parte", "Parte")
                        .WithOne("PublicadorParte")
                        .HasForeignKey("Designa.Models.PublicadorParte", "ParteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Designa.Models.Publicador", "PublicadorAjudante")
                        .WithMany("PartesPublicadorAjudante")
                        .HasForeignKey("PublicadorAjudanteId");

                    b.HasOne("Designa.Models.Publicador", "Publicador")
                        .WithMany("PartesPublicador")
                        .HasForeignKey("PublicadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parte");

                    b.Navigation("Publicador");

                    b.Navigation("PublicadorAjudante");
                });

            modelBuilder.Entity("Designa.Models.PublicadorPrivilegio", b =>
                {
                    b.HasOne("Designa.Models.Publicador", "Publicador")
                        .WithMany("PublicadorPrivilegios")
                        .HasForeignKey("PublicadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicador");
                });

            modelBuilder.Entity("Designa.Models.Reuniao", b =>
                {
                    b.HasOne("Designa.Models.Publicador", "Presidente")
                        .WithMany()
                        .HasForeignKey("PresidenteId");

                    b.HasOne("Designa.Models.Publicador", "PublicadorOracao")
                        .WithMany()
                        .HasForeignKey("PublicadorOracaoId");

                    b.Navigation("Presidente");

                    b.Navigation("PublicadorOracao");
                });

            modelBuilder.Entity("Designa.Models.Parte", b =>
                {
                    b.Navigation("PublicadorParte");
                });

            modelBuilder.Entity("Designa.Models.Publicador", b =>
                {
                    b.Navigation("PartesPublicador");

                    b.Navigation("PartesPublicadorAjudante");

                    b.Navigation("PublicadorPrivilegios");

                    b.Navigation("listaNegraPublicadores");
                });

            modelBuilder.Entity("Designa.Models.Reuniao", b =>
                {
                    b.Navigation("Partes");
                });
#pragma warning restore 612, 618
        }
    }
}
